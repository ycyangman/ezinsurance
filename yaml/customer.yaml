apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer
  namespace: ezinsurance
  labels:
    app: customer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: customer
  template:
    metadata:
      labels:
        app: customer
    spec:
      containers:
        - name: customer
          image: ycyang73/ezinsurance-customer:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
#환경설정 END
          env:
            - name: KAFKA_BROKERS
              valueFrom:
                configMapKeyRef:
                  name: ezinsurance-config
                  key: kafka.brokers
            - name: DATASOURCE_SCHEMA
              valueFrom:
                configMapKeyRef:
                  name: ezinsurance-config
                  key: datasource.schema
            - name: DATASOURCE_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: ezinsurance-config
                  key: datasource.username
            - name: DATASOURCE_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: ezinsurance-config
                  key: datasource.password
#환경설정 END
#          readinessProbe:
#            httpGet:
#              path: '/actuator/health'
#              port: 8080
#            initialDelaySeconds: 10
#            timeoutSeconds: 2
#            periodSeconds: 5
#            failureThreshold: 10
#          livenessProbe:
#            httpGet:
#              path: '/actuator/health'
#              port: 8080
#            initialDelaySeconds: 120
#            timeoutSeconds: 2
#            periodSeconds: 5
#            failureThreshold: 5

---

apiVersion: v1
kind: Service
metadata:
  name: customer
  namespace: ezinsurance
  labels:
    app: customer
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: customer
